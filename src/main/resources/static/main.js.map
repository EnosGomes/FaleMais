{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/ligacao/service/ligacao.service.ts","webpack:///./src/app/material-export/material-export.module.ts","webpack:///./src/app/pipe/formatacao-moeda.pipe.ts","webpack:///./src/app/plano/service/plano.service.ts","webpack:///./src/app/service/base.service.ts","webpack:///./src/app/simulador/service/simulador.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<mat-toolbar class=\\\"mat-elevation-z4\\\" color=\\\"primary\\\" style=\\\"margin:0;padding:0\\\">\\n  <span class=\\\"app-spacer\\\"></span>\\n  <div class=\\\"text-align: center\\\">\\n    <span>Simulador {{ title }}</span>\\n  </div>\\n  <span class=\\\"app-spacer\\\"></span>\\n</mat-toolbar>\\n<form #f=\\\"ngForm\\\" (ngSubmit)=\\\"calcularMinutos(f)\\\">\\n  <mat-card style=\\\"text-align: center\\\">\\n    <mat-card-subtitle>Simule aqui o valor da ligação com e sem o plano: </mat-card-subtitle>\\n    <mat-card-content style=\\\"text-align: center\\\">\\n\\n      <div>\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Origem: \\\" id=\\\"origem\\\" name=\\\"origem\\\" required [(ngModel)]=\\\"origem\\\">\\n            <mat-option *ngFor=\\\"let origem of origens\\\" [value]=\\\"origem\\\">\\n              {{origem}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Destino: \\\" id=\\\"destino\\\" name=\\\"destino\\\" required [(ngModel)]=\\\"destino\\\">\\n            <mat-option *ngFor=\\\"let destino of destinos\\\" [value]=\\\"destino\\\">\\n              {{destino}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <mat-form-field>\\n          <input matInput id=\\\"tempoLigacao\\\" name=\\\"tempoLigacao\\\" placeholder=\\\"Tempo da Ligação: \\\"\\n            [(ngModel)]=\\\"tempoLigacao\\\" type=\\\"number\\\" required>\\n        </mat-form-field>\\n      </div>\\n      <div>\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Plano: \\\" id=\\\"plano\\\" name=\\\"plano\\\" required [(ngModel)]=\\\"plano\\\">\\n            <mat-option *ngFor=\\\"let plano of planos\\\" [value]=\\\"plano\\\">\\n              {{plano.descricao}}\\n            </mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Calcular</button>\\n      <button mat-raised-button color=\\\"accent\\\" (click)=\\\"limparFormulario()\\\">Limpar</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</form>\\n\\n<mat-card style=\\\"margin-top:5px;text-align: center\\\" *ngIf=\\\"resultado\\\">\\n  <mat-card-subtitle>Resultado: </mat-card-subtitle>\\n  <mat-card-content style=\\\"text-align: center\\\">\\n    <div>\\n      <mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n        <ng-container matColumnDef=\\\"com_fale_mais\\\">\\n          <mat-header-cell *matHeaderCellDef> Com FaleMais </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.comPlano | moeda}} </mat-cell>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"sem_fale_mais\\\">\\n          <mat-header-cell *matHeaderCellDef> Sem FaleMais </mat-header-cell>\\n          <mat-cell *matCellDef=\\\"let element\\\"> {{element.semPlano | moeda}} </mat-cell>\\n        </ng-container>\\n\\n        <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n        <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n      </mat-table>\\n    </div>\\n  </mat-card-content>\\n</mat-card>\\n\\n\\n<router-outlet></router-outlet>\\n\"","module.exports = \".app-spacer {\\n  flex: 1 1 auto; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kaW9nby9CYWNrdXBIRC93b3Jrc3BhY2VzL294eWdlbi9mYWxlbWFpcy9zcmMvbWFpbi9yZXNvdXJjZXMvZnJvbnRlbmQvc3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYXBwLXNwYWNlciB7XG4gIGZsZXg6IDEgMSBhdXRvO1xufVxuXG4iXX0= */\"","import { MatSnackBar } from '@angular/material';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\n\nimport { LigacaoService } from './ligacao/service/ligacao.service';\nimport { PlanoService } from './plano/service/plano.service';\nimport { SimuladorService } from './simulador/service/simulador.service';\n\nconst SNACKBAR_DURATION = 2000;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n\n  @ViewChild('f') f: NgForm;\n  displayedColumns: string[] = ['com_fale_mais', 'sem_fale_mais'];\n  dataSource;\n\n  /**\n   * Titulo do App\n   */\n  title = 'FaleMais';\n\n  /**\n   * Lista de todos os planos FaleMais\n   */\n  planos: [];\n\n  /**\n   * Plano selecionado\n   */\n  plano: number;\n\n  /**\n   * Lista de todos os códigos cadastrados como origem\n   */\n  origens: [];\n\n  /**\n   * Origem selecionada\n   */\n  origem: String;\n\n  /**\n   * Lista de todos os códigos cadastrados como destino\n   */\n  destinos: [];\n\n  /**\n   * Destinos selecionados\n   */\n  destino: String;\n\n  /**\n   * Tempo da ligação em minutos\n   */\n  tempoLigacao: number;\n\n  /**\n   * Exibe o card de resultado com as informações vindas do backend\n   */\n  resultado = false;\n\n  constructor(\n    private planoService: PlanoService,\n    private ligacaoService: LigacaoService,\n    private simuladorService: SimuladorService,\n    private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    forkJoin(\n      this.planoService.obterTodosPlanos(),\n      this.ligacaoService.obterTodasOrigens(),\n      this.ligacaoService.obterTodosDestinos()\n    ).subscribe(([planos, origens, destinos]) => {\n      this.planos = planos;\n      this.origens = origens;\n      this.destinos = destinos;\n    });\n  }\n\n  calcularMinutos() {\n    if (this.f.valid) {\n      this.simuladorService.calcularMinutos({\n        origem: this.origem,\n        destino: this.destino,\n        plano: this.plano,\n        tempoLigacao: this.tempoLigacao\n      }).subscribe(\n        retorno => {\n          this.snackBar.open('Cálculo realizado com sucesso', null, {\n            duration: SNACKBAR_DURATION,\n            panelClass: ['app-snackbar-ok']\n          });\n          this.resultado = true;\n          this.dataSource = retorno;\n        },\n        error => {\n          this.snackBar.open(error.message, null, {\n            duration: SNACKBAR_DURATION,\n            panelClass: ['app-snackbar-erro']\n          });\n        }\n      );\n    }\n  }\n\n  limparFormulario() {\n    this.f.resetForm();\n\n    this.plano = undefined;\n    this.origem = undefined;\n    this.destino = undefined;\n    this.tempoLigacao = undefined;\n    this.resultado = false;\n  }\n\n}\n","import { registerLocaleData } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport localePtBr from '@angular/common/locales/pt';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialExportModule } from './material-export/material-export.module';\nimport { FormatacaoMoedaPipe } from './pipe/formatacao-moeda.pipe';\n\nregisterLocaleData(localePtBr);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FormatacaoMoedaPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    MaterialExportModule,\n    BrowserAnimationsModule,\n    FormsModule\n  ],\n  providers: [\n    { provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: { appearance: 'legacy' } },\n    { provide: LOCALE_ID, useValue: 'pt-BR' }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseService } from 'src/app/service/base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LigacaoService extends BaseService {\n\n  constructor(protected http: HttpClient) {\n    super('/api/ligacoes');\n  }\n\n  obterTodosDestinos(): Observable<any> {\n    return this.http.get(this.getApiLocation() + '/origens');\n  }\n  obterTodasOrigens(): Observable<any> {\n    return this.http.get(this.getApiLocation() + '/destinos');\n  }\n\n}\n","import { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  imports: [\n    MatSelectModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSnackBarModule\n  ],\n  exports: [\n    MatSelectModule,\n    MatInputModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n    MatTableModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  declarations: []\n})\nexport class MaterialExportModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CurrencyPipe } from '@angular/common';\n\nconst currencyPipe = new CurrencyPipe('pt');\n\n@Pipe({ name: 'moeda' })\nexport class FormatacaoMoedaPipe implements PipeTransform {\n\n  transform(value: any, decimais: number = 2, ...args: any[]): any {\n    if (value != null) {\n      let formato = `1.${decimais}-${decimais}`;\n      return currencyPipe.transform(value, 'BRL', 'symbol', formato);\n    }\n    return '-';\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseService } from 'src/app/service/base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlanoService extends BaseService {\n\n  constructor(protected http: HttpClient) {\n    super('/api/planos');\n  }\n\n  obterTodosPlanos(): Observable<any> {\n    return this.http.get(this.getApiLocation());\n  }\n\n}\n","export abstract class BaseService {\n\n  constructor(protected apiLocation: string) { }\n\n  public getApiLocation(): string {\n    return this.apiLocation;\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BaseService } from 'src/app/service/base.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimuladorService extends BaseService {\n\n  constructor(protected http: HttpClient) {\n    super('/api/simulador');\n  }\n\n  public calcularMinutos(entity: any): Observable<any> {\n    return this.http.post(this.getApiLocation() + '/calcular-minutos', entity);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}